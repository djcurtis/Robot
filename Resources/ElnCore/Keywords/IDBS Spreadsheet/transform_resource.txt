*** Settings ***
Documentation     Resource to hold Transform specific keywords. Primiarily created to promote use of REST services over SQL dependant keywords and also to separate the transform specific keywords from the search resources.
Resource          ../Core Web Services/Entity Service/rest_entity_service_resource.txt
Resource          ../General Setup/general setup tools.txt
Resource          spreadsheet_catalog_keywords.txt
Resource          ../Core Web Services/Settings Service/rest_settings_service_resource.txt
Resource          ../common_resource.txt
Resource          ../Web Client/Selenium/quantrix_web_resource.txt
Resource          ../Web Client/Selenium/spreadsheet_web_editor.txt
Library           EntityAPILibrary
Library           XMLLibrary
Resource          ../Web Services/REST_CatalogService/rest_catalog_service_resource.txt
Resource          ../Web Client/Selenium/hierarchy_resource.txt
Resource          ../E-WorkBook_Database/ewb_oracle_resource.txt
Resource          ../Web Client/Selenium/general_resource.txt

*** Variables ***
${MEASURE_TERM}    ${EMPTY}    # The measure term id; created in the test setup and deleted in the test teardown

*** Keywords ***
Transform Test Setup
    [Arguments]    ${transform_spreadsheet_file}    ${measure_term_name}    ${search_spreadsheet_file}=${EMPTY}    ${draft_transform_enabled}=${False}    ${delete_setting}=${False}
    [Documentation]    Typical transform test setup. Imports a spreadsheet containing the data to transform and an additional spreadsheet to search for the transformed data with. ...
    ...    *Arguments*
    ...
    ...    _transform_spreadsheet_file_ - the relative path to the spreadsheet file to load
    ...
    ...    _search_spreadsheet_file_ - the relative path to the search spreadsheet file to load.
    ...
    ...    _measure_term_name_ - the name of the measure term that will be created for the test
    ...
    ...    _draft_transform_enabled_ - boolean value to inform whether or not transforms should be enabled on draft save
    ...
    ...    _create_system_setting_ - boolean value to inform whether or not the system setting for draft save transforms should be created.
    Set Boolean System Setting    com.idbs.ewb.idbsspreadsheet.transform.DRAFT_SAVE_TRANSFORM    ${draft_transform_enabled}    ${delete_setting}
    # Create the measure term
    ${MEASURE_TERM}=    Create Simple Measure Term    ${measure_term_name}
    Set Test Variable    ${MEASURE_TERM}
    # Because we may have cached changes from a previous test, Firefox can prompt us to stay, so we force the reload here.
    Force Page Reload
    # Create the experiment and add the spreadsheet
    Create Test Experiment    Transform
    ${transform_spreadsheet_id}=    EntityAPILibrary.Insert Idbs Spreadsheet Document    ${experiment_id}    ${transform_spreadsheet_file}
    Set Test Variable    ${TRANSFORM_SPREADSHEET_ID}
    # If we have a search spreadsheet, insert it
    Run Keyword If    '${search_spreadsheet_file}'    EntityAPILibrary.Insert Idbs Spreadsheet Document    ${experiment_id}    ${search_spreadsheet_file}
    Go To Experiment    ${experiment_id}
    # Dirty the transform spreadsheet to trigger tidy-up (transform won't run without this)
    Start Spreadsheet Lite Editor    1
    Type to Cell in Editor    Table1    0    1    1
    Exit Spreadsheet Lite Editor

Transform Test Teardown
    [Documentation]    closes the web editor and attempts to close the experiment (i.e. leaving it in a "clean" state), with a fallback of unlocking the experiment ready for deletion in the suite teardown
    ...
    ...    *Arguments*
    ...
    ...    _close_mode_ - the close operation to perform. \ one of either: DISCARD, DRAFT or VERSION
    Delete Element    ${MEASURE_TERM}    # Created in the test setup
    # try and tidy up nicely, but at the same time handle the fact that things might have gone wrong    hence the IGNORE ERROR parts
    Run Keyword If    ${SPREADSHEET_OPEN}    Run Keyword and Ignore Error    Exit Spreadsheet Lite Editor
    # unlock the experiment to allow the deletion in suite teardown
    run keyword and ignore error    Unlock Test Experiment

Transform Data Should Not Exist For Entity Version
    [Arguments]    ${entity_id}    ${entity_version_id}    ${transform_type}    ${timeout}=10s
    [Documentation]    Ensures that a transform hasn't been triggered by waiting at least the given amount of time (defaults to 10 seconds) for any transform status to appear, and failing if it does appear.
    ...
    ...    *Required Args*:
    ...
    ...    ${entity_id} - The transformed entity ID.
    ...
    ...    ${entity_version_id} - The transformed entity version ID.
    ...
    ...    ${transformation_type} - The type of transformation (e.g. spreadsheet_mart)
    ...
    ...
    ...    *Example Use Case* - In the following example, a spreadsheet is created and given some text before being draft saved to enable the spreadsheet data transform to occur (if configured). In the case where it isn't configured, this keyword is then used to ensure that not transform happened:
    ...
    ...
    ...    | ${experiment_id}= | *Create IDBS Spreadsheet Document* |
    ...
    ...    | ${spreadsheet_id}= | *Create IDBS Spreadsheet Document* | ${experiment_id} |
    ...
    ...    | *Go To Experiment* | ${experiment_id} |
    ...
    ...    | *Start Spreadsheet Lite Editor* | 1 |
    ...
    ...    | *Type To Cell In Editor* | 0 | 0 | test |
    ...
    ...    | *Draft Save Record* |
    ...
    ...    | ${entity_version_id}= | *Get Entity Version ID* | ${spreadsheet_id} | ${False} |
    ...
    ...    | ${status}= | *Transform Data Should Not Exist For Entity Version* | ${spreadsheet_id} | ${entity_version_id} | spreadsheet_mart |
    Run Keyword And Expect Error    *404 Not Found*    Wait Until Keyword Succeeds    ${timeout}    1s    Get Transform Status - Rest    ${entity_id}
    ...    ${entity_version_id}    ${transform_type}

Wait For Transform To Become Available - Rest
    [Arguments]    ${entity_id}    ${transform_type}=idbs:spreadsheet_mart    ${tries}=15    ${retry_interval}=2s
    [Documentation]    Uses the REST Entity service to wait for transformed data/text/xml to become available.
    ...
    ...    *Required Args*:
    ...
    ...    ${entity_id} - The transformed entity ID.
    ...
    ...    ${transformation_type} - The type of transformation (e.g. idbs:spreadsheet_mart)
    ...
    ...
    ...
    ...    *Example Use Case* - In the following example, a spreadsheet is created and given some text before being draft saved to enable the spreadsheet text transform to occur. This keyword is then used to wait until the transform is complete:
    ...
    ...    | ${experiment_id}= | *Create IDBS Spreadsheet Document* |
    ...
    ...    | ${spreadsheet_id}= | *Create IDBS Spreadsheet Document* | ${experiment_id} |
    ...
    ...    | *Go To Experiment* | ${experiment_id} |
    ...
    ...    | *Start Spreadsheet Lite Editor* | 1 |
    ...
    ...    | *Type To Cell In Editor* | 0 | 0 | test |
    ...
    ...    | *Draft Save Record* |
    ...
    ...    | *Wait For Transform To Become Available - Rest* \ | ${spreadsheet_id} | spreadsheet_text |
    ${entity_version_id}=    Get Entity Version ID    ${entity_id}    ${False}
    : FOR    ${element}    IN RANGE    ${tries}
    \    ${keyword_status}    ${transform_status}=    Run Keyword and Ignore Error    Get Transform Status - Rest    ${entity_id}    ${entity_version_id}
    \    ...    ${transform_type}    # Don't really want to fail if the request fails for reasons unrelated to the functionality, so ignore error filters out sporadic reliability issues here.
    \    Exit For Loop If    '${transform_status[0]}'=='AVAILABLE'
    \    Exit For Loop If    '${transform_status[0]}'=='FAILED'
    \    Sleep    ${retry_interval}
    log    ${transform_status}
    # If failed, grab the comment for debugging.
    ${error_comment}=    Run Keyword If    '${transform_status[0]}'!='AVAILABLE'    Get Transform Error Comment - Rest    ${entity_id}    ${entity_version_id}    ${transform_type}
    Run Keyword If    '${transform_status[0]}'!='AVAILABLE'    Log    ${error_comment}
    Run Keyword If    '${transform_status[0]}'!='AVAILABLE'    Fail    The Transform is not available. Please ensure the arguments supplied were correct (invalid ${transform_type} has been a common failure in the past). For more details on the REST response, enable http debugging with the following argument '--variable enable_http_debugging:true' and run again.

Get Transform Status - Rest
    [Arguments]    ${entity_id}    ${entity_version_id}    ${transform_type}
    [Documentation]    Uses the REST Entity service to get the Transform Status, \ assuming there is a status to retrieve.
    ...
    ...    *Required Args*:
    ...
    ...    ${entity_id} - The transformed entity ID.
    ...
    ...    ${entity_version_id} - The transformed entity version ID.
    ...
    ...    ${transformation_type} - The type of transformation (e.g. spreadsheet_mart)
    ...
    ...
    ...
    ...    *Example Use Case* - In the following example, a spreadsheet is created and given some text before being draft saved to enable the spreadsheet text transform to occur. This keyword is then used to retrieve the transform status:
    ...
    ...    | ${experiment_id}= | *Create IDBS Spreadsheet Document* |
    ...
    ...    | ${spreadsheet_id}= | *Create IDBS Spreadsheet Document* | ${experiment_id} |
    ...
    ...    | *Go To Experiment* | ${experiment_id} |
    ...
    ...    | *Start Spreadsheet Lite Editor* | 1 |
    ...
    ...    | *Type To Cell In Editor* | 0 | 0 | test |
    ...
    ...    | *Draft Save Record* |
    ...
    ...    | ${entity_version_id}= | *Get Entity Version ID* | ${spreadsheet_id} |
    ...
    ...    | ${status}= | *Get Transform Status - Rest* \ | ${spreadsheet_id} | ${entity_version_id} | spreadsheet_text |
    ${te_info}=    Get Transformed Entity Info    ${entity_id}    ${entity_version_id}    ${transform_type}
    ${status}    Get Element Value    ${te_info}    http://entity.services.ewb.idbs.com    transformedDataStatus
    [Return]    ${status}

Get Transform Error Comment - Rest
    [Arguments]    ${entity_id}    ${entity_version_id}    ${transform_type}
    [Documentation]    Uses the REST Entity service to get the Transform Error Comment, assuming there is an error comment to retrieve.
    ...
    ...    *Required Args*:
    ...
    ...    ${entity_id} - The transformed entity ID.
    ...
    ...    ${entity_version_id} - The transformed entity version ID.
    ...
    ...    ${transformation_type} - The type of transformation (e.g. spreadsheet_mart)
    ...
    ...
    ...
    ...    *Example Use Case* - In the following example, a spreadsheet is created and given some text before being draft saved to enable the spreadsheet text transform to occur. This keyword is then used to retrieve the transform error comment, assuming it failed:
    ...
    ...    | ${experiment_id}= | *Create IDBS Spreadsheet Document* |
    ...
    ...    | ${spreadsheet_id}= | *Create IDBS Spreadsheet Document* | ${experiment_id} |
    ...
    ...    | *Go To Experiment* | ${experiment_id} |
    ...
    ...    | *Start Spreadsheet Lite Editor* | 1 |
    ...
    ...    | *Type To Cell In Editor* | 0 | 0 | test |
    ...
    ...    | *Draft Save Record* |
    ...
    ...    | ${entity_version_id}= | *Get Entity Version ID* | ${spreadsheet_id} |
    ...
    ...    | ${error}= | *Get Transform Error Comment - Rest* | ${spreadsheet_id} | ${entity_version_id} | spreadsheet_text |
    ${te_info}=    Get Transformed Entity Info    ${entity_id}    ${entity_version_id}    ${transform_type}
    ${comment}=    Get Element Value    ${te_info}    http://entity.services.ewb.idbs.com    errorComment
    [Return]    ${comment}
