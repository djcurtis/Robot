*** Settings ***
Documentation     The following test cases are all for the endpoint: DELETE /services/1.0/entities/{entityId}/comments/{commentId}
Suite Setup       Record Service Suite Setup
Suite Teardown    Record Service Suite Teardown
Force Tags           Delete Comment
# Library           EntityAPILibrary
# Library           SecurityAPILibrary
Library           XMLLibrary
Resource          ../../../Libraries/common_resource.txt
Resource          record_service_resources.txt    # suite setup and teardown
Resource          ../../../Libraries/Web Services/REST_SecurityService/rest_security_service_resource.txt
Resource          ../../../Libraries/General Setup/general setup tools.txt
Resource          ../../../Libraries/Core Web Services/Record Service/rest_record_service_resource.txt    # REST Record Service
Resource          ../../../Libraries/Core Web Services/Entity Service/rest_entity_service_resource.txt    # REST Entity Service

*** Test Cases ***
Delete comment
    [Documentation]    
    ...
    ...    A successful call returns the HTTP status 200 and the item entity publishing state is set
    ${experiment_name}=    Set Variable    DCO-S001
    ${experiment_id}=    Create Experiment    ${project_id}    ${experiment_name}
    ${entity_version_id}=    Get Entity Version ID    ${experiment_id}
    ${comment_id}=    Rest_Entity_Service_Resource.Add Comment    ${experiment_id}    ${entity_version_id}    Test comment
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    ${entity_version_id}    ${comment_id}
    # Checking expectations
    ${sapi_entity_comment_sequence}=    Rest_Entity_Service_Resource.Get Comments    ${experiment_id}    ${entity_version_id}
    Should Not Contain    ${sapi_entity_comment_sequence}=    Test comment

Delete comment with missing version id
    [Documentation]    
    ...
    ...    If the call parameter ‘entityVersionId’ is missing or invalid, then the HTTP status code 400 is returned to the client
    ${experiment_name}=    Set Variable    DCO-S002
    ${experiment_id}=    Create Experiment    ${project_id}    ${experiment_name}
    ${entity_version_id}=    Get Entity Version ID    ${experiment_id}
    ${comment_id}=    Rest_Entity_Service_Resource.Add Comment    ${experiment_id}    ${entity_version_id}    Test comment
    # missing entity version id
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    ${EMPTY}    ${comment_id}    400
    # wrong entity version id
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    WrongEntityVersionId    ${comment_id}    404

Delete comment with missing comment id
    [Documentation]    
    ...
    ...    If the call parameter ‘entityCommentId’ is missing or invalid, then the HTTP status code 400 is returned to the client
    ${experiment_name}=    Set Variable    DCO-S003
    ${experiment_id}=    Create Experiment    ${project_id}    ${experiment_name}
    ${entity_version_id}=    Get Entity Version ID    ${experiment_id}
    ${comment_id}=    Rest_Entity_Service_Resource.Add Comment    ${experiment_id}    ${entity_version_id}    Test comment
    # missing comment id
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    ${entity_version_id}    ${EMPTY}    405
    # wrong comment id
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    ${entity_version_id}    InvalidCommentId    404

Delete comment to not existing entity
    [Documentation]    
    ...
    ...    If the entity does not exist, then the HTTP status code 404 is returned to the client
    ${experiment_name}=    Set Variable    DCO-S004
    ${experiment_id}=    Create Experiment    ${project_id}    ${experiment_name}
    ${entity_version_id}=    Get Entity Version ID    ${experiment_id}
    ${comment_id}=    Rest_Entity_Service_Resource.Add Comment    ${experiment_id}    ${entity_version_id}    Test comment
    # not existing entity
    Rest_Entity_Service_Resource.Delete Comment    WrongEntityId    WrongVersionId    ${comment_id}    404

Delete comment to not existing comment
    [Documentation]    
    ...
    ...    If the comment to delete does not exist, then the HTTP status code 404 is returned to the client
    ${experiment_name}=    Set Variable    DCO-S005
    ${experiment_id}=    Create Experiment    ${project_id}    ${experiment_name}
    ${entity_version_id}=    Get Entity Version ID    ${experiment_id}
    ${comment_id}=    Rest_Entity_Service_Resource.Add Comment    ${experiment_id}    ${entity_version_id}    Test comment
    # wrong comment id
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    ${entity_version_id}    InvalidCommentId    404

Delete comment without permissions
    [Documentation]    
    ...
    ...    If the client does not have EDIT_COMMENTS permission, then the HTTP status code 403 is returned to the client
    ${experiment_name}=    Set Variable    DCO-S006
    ${experiment_id}=    Create Experiment    ${project_id}    ${experiment_name}
    ${entity_version_id}=    Get Entity Version ID    ${experiment_id}
    ${comment_id}=    Rest_Entity_Service_Resource.Add Comment    ${experiment_id}    ${entity_version_id}    Test comment
    # no permissions
    Use User With Permissions    ${username}    ${password}    ${experiment_id}
    Rest_Entity_Service_Resource.Delete Comment    ${experiment_id}    ${entity_version_id}    ${comment_id}    403

*** Keywords ***
