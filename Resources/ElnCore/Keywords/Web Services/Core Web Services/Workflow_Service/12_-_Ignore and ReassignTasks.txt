*** Settings ***
Documentation     Covering the */services/1.0/workflows/{taskid}/ignore* endpoint
Test Setup        Workflow Service Test Case Setup
Resource          ../../../Libraries/common_resource.txt    # Common Resource
Resource          ../../../Libraries/Web Services/REST_TaskService/rest_workflow_service_resource.txt    # Workflow WS Resource
Resource          ../../../Libraries/Web Services/REST_TaskService/rest_task_service_resource.txt    # Task WS Resource

*** Test Cases ***
Ignore New Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Ignore Task    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Ignore New-Overdue Task From Two User Pool
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW -1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Ignore Task    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Ignore Pending Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Ignore \ Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Ignore In-Progress Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Ignore Task
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Ignore Task As Non-Assigned User
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser2
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser21
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Ignore In Progress Overdue Task From Two User Pool
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW - 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Ignore Task
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Ignore Task As Non-Assigned User
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser2
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser21
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Ignore Completed Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Accept and Complete Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    Complete Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task and Non-Assigned User
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser2
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser21
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Ignore Cancelled Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Cancel Task
    Cancel Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task and Non-Assigned User
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser2
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser21
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Ignore Rejected Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    # Cancel Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reject Task    ${new task id}    rejected
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task As Non-Assigned User
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser2
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser21
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Ignore Closed Task From Two User Pool
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1","WorkflowWSUser2"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Complete Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    Complete Task    ${new task id}
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Close Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Ignore Task As Non-Assigned User
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser2
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser21
    Ignore Task And Expect Error    ${new task id}    403
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Reassign New Task
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Reassign New-Overdue Task
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW -1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Reassign Pending Task
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Reassign In-Progress Task
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Reassign In Progress Overdue Task
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW - 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS_OVERDUE
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2

Reassign Completed Task
    [Documentation]    Deferred defect = QC13875
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Accept and Complete Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    Complete Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Reassign Task
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Reassign Cancelled Task
    [Documentation]    Deferred defect = QC13875
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Cancel Task
    Cancel Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    # Reassign Task
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Reassign Rejected Task
    [Documentation]    Deferred defect = QC13875
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Cancel Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reject Task    ${new task id}    rejected
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    # Reassign Task
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Reassign Closed Task
    [Documentation]    Deferred defect = QC13875
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Complete Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Task    ${new task id}
    Complete Task    ${new task id}
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Close Task    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    # Reassign Task
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED
    Validate Task    ${workflow tasks JSON}    assigned_users=[]

Reassign New Task as Assigner
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign In-Progress Task as Assigner
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign Pending Task As Assigner
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign New Task as Assigned User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    all_assigned_users={"user": ["WorkflowWSUser2"]}

Reassign In-Progress Task as Assigned User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    all_assigned_users={"user": ["WorkflowWSUser2"]}

Reassign Pending Task As Assigned User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    all_assigned_users={"user": ["WorkflowWSUser2"]}

Reassign New Task as User with REASSIGN_ANY_TASK permission
    # Obtain due date that is one day from now
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign In-Progress Task as User with REASSIGN_ANY_TASK permission
    # Obtain due date that is one day from now
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign Pending Task As User with REASSIGN_ANY_TASK permission
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Reassign Task    ${new task id}    "WorkflowWSUser2"
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser2
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign New Task as User without REASSIGN_ANY_TASK permission
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser4
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser41
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign In-Progress as User without REASSIGN_ANY_TASK permission
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser4
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser41
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1

Reassign Pending Task As User without REASSIGN_ANY_TASK permission
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser5
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser51
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    # Reassign Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser4
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser41
    Reassign Task And Expect Error    ${new task id}    403    "WorkflowWSUser2"
    # Validate Task Status
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
    Validate Task    ${workflow tasks JSON}    assigned_users=WorkflowWSUser1
