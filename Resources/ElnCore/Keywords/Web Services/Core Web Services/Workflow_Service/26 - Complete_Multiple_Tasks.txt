*** Settings ***
Documentation     Covering the */services/1.0/tasks/complete* endpoint
Test Setup        Workflow Service Test Case Setup
Resource          ../../../Libraries/common_resource.txt    # Common Resource
Resource          ../../../Libraries/Web Services/REST_TaskService/rest_workflow_service_resource.txt    # Workflow WS Resource
Resource          ../../../Libraries/Web Services/REST_TaskService/rest_task_service_resource.txt    # Task WS Resource

*** Test Cases ***
Test 1 - Complete Task as User who is not the Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should fail as we are doing it as someone other than the responsible user
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Close Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS

Test 2a - Complete New Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Complete Task should fail
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW

Test 2b - Complete New-Overdue Task As Responsible User
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW - 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    # Complete Task should fail
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE

Test 2c - Complete Pending Task As Responsible User
    #TODO - Needs better setup in stub test
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task 1 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 2 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task 3 json}=    Create Task JSON For Multiple Task Workflow    NON_TEST    WF4_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${task setup json}=    Set Variable    {"taskSetup": [${task 1 json},${task 2 json},${task 3 json}]}
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 4    ${new due date}    false
    ...    Normal    ${task setup json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    2
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING
    # Complete Task should fail
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=PENDING

Test 2d.i - Complete In Progress REVIEW Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2d.ii - Complete In Progress ALERT Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF3_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 3    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2d.iii - Complete In Progress SIGN OFF Task against a Draft Saved Experiment
    [Documentation]    This script verifies that an error occurs on trying to complete a sign off on a task against an experiment that is in a draft save state
    [Tags]    ignore
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF7_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    Create Workflow Via WS And Expect Error    BY_ENTITY_ID    ${wf_experiment_3}    WF WS Workflow 7    ${new due date}    false    Normal
    ...    ${task json}    400

Test 2d.iv - Complete In Progress SIGN OFF Task against an experiment with no signatures
    [Documentation]    This script verifies that an error occurs on trying to complete a sign off on a task against an experiment that has not had it's entities signed
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF7_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 7    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should fail (experiment hasn't had its items signed)
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS

Test 2d.v - Complete In Progress SIGN OFF Task against an experiment with partial signature and 'all items must be signed' not selected
    [Documentation]    This script verifies that an error occurs on trying to complete a sign off on a task against an experiment that has not had it's entities signed
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF7_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_4}    WF WS Workflow 7    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should work as 1 item of 3 is signed
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2d.vi - Complete In Progress SIGN OFF Task against an experiment with partial signature and 'all items must be signed' selected
    [Documentation]    This script verifies that an error occurs on trying to complete a sign off on a task against an experiment that has not had it's entities signed
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF8_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_4}    WF WS Workflow 8    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should fail as 1 item of 3 is signed and sign all is selected for this workflow
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS

Test 2d.vii - Complete In Progress SIGN OFF Task against an experiment with full signature and 'all items must be signed' not selected
    [Documentation]    This script verifies that an error occurs on trying to complete a sign off on a task against an experiment that has not had it's entities signed
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF7_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_5}    WF WS Workflow 7    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should work as all items are signed
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2d.viii - Complete In Progress SIGN OFF Task against an experiment with full signature and 'all items must be signed' selected
    [Documentation]    This script verifies that an error occurs on trying to complete a sign off on a task against an experiment that has not had it's entities signed
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF8_SIGN1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_5}    WF WS Workflow 8    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should work as all items are signed
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2e.i - Complete In Progress Overdue REVIEW Task As Responsible User
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW - 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS_OVERDUE
    # Complete Task
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2e.ii - Complete In Progress Overdue ALERT Task As Responsible User
    # Obtain due date that is yesterday
    ${new due date}=    Create Due Date Format    NOW - 1 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF3_ALERT1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 3    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    Wait For Overdue Task
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW_OVERDUE
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS_OVERDUE
    # Complete Task
    Complete Multiple Tasks    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2f - Complete Completed Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept and Complete Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    Complete Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED
    # Complete Task again and expect error
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=COMPLETED

Test 2g - Complete Cancelled Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Cancel Task
    Cancel Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED
    # Complete Task and expect error
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CANCELLED

Test 2h - Complete Rejected Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Cancel Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Reject Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED
    # Complete Task should fail
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=REJECTED

Test 2i - Complete Closed Task As Responsible User
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Complete Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    Complete Multiple Tasks    ${new task id}
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Close Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED
    # Complete Task should fail
    Complete Multiple Tasks And Expect Error    403    ${new task id}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=CLOSED

Test 3 - Complete Non Existent Task
    #Try to accept a dummy GUID
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    #Dummy GUID
    ${new task id}=    Set Variable    ff8a69b05bd411e2ae4e0023ae89b843
    Complete Multiple Tasks And Expect Error    404    ${new task id}

Test 4 - Unexpected Characters In TaskID
    #Requesting a Complete with a series of unexpected characters in the TaskID, expect a 40x not a 50x
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    #Uppercase
    ${new task id}=    Set Variable    FFFF69b05bd411e2ae4e0023ae89b843
    Complete Multiple Tasks And Expect Error    404    ${new task id}
    #non hex letters
    ${new task id}=    Set Variable    QWER69b05bd411e2ae4e0023ae89b843
    Complete Multiple Tasks And Expect Error    404    ${new task id}
    #Symbols
    ${new task id}=    Set Variable    !'%^&*()d411e2ae4e0023ae89b843ee
    Complete Multiple Tasks And Expect Error    404    ${new task id}

Test 5 - TaskID is too long
    #Try to use a TaskID that is too long, expect a 404 error not a 50x exception
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    #Dummy GUID
    ${new task id}=    Set Variable    ff8a69b05bd411e2ae4e0023ae89b843ffffffffffff
    Complete Multiple Tasks And Expect Error    404    ${new task id}

Test 6 - TaskID is blank
    #Try to use a TaskID that is too long, expect a 404 error not a 50x exception
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    #Dummy GUID
    ${new task id}=    Set Variable
    Complete Multiple Tasks And Expect Error    404    ${new task id}

Test 6.a - Complete 2 Tasks Where User is Not responsible user for one of the Tasks
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create 2 new workflows with different responsible users
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    ${task json2}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "Administrator"    ${EMPTY}    Example Comment
    ${sign off workflow id2}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json2}
    # Get task IDs
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    ${new task id2}=    Get Task ID From Workflow ID    ${sign off workflow id2}    1
    ${workflow tasks JSON2}=    Get Task From Task ID    ${new task id2}
    Validate Task    ${workflow tasks JSON2}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Tasks
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    Accept Multiple Tasks    ${new task id2}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    ${workflow tasks JSON2}=    Get Task From Task ID    ${new task id2}
    Validate Task    ${workflow tasks JSON2}    task_status=IN_PROGRESS
    # Complete Both Tasks at once, using both ways around
    @{task ids}=    Create List    ${new task id}    ${new task id2}
    Complete Multiple Tasks And Expect Error    403    @{task ids}
    @{task ids}=    Create List    ${new task id2}    ${new task id}
    Complete Multiple Tasks And Expect Error    403    @{task ids}
    # Validate Task Statuses
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    ${workflow tasks JSON2}=    Get Task From Task ID    ${new task id2}
    Validate Task    ${workflow tasks JSON2}    task_status=IN_PROGRESS

Test 6.b - Complete IN_PROGRESS Task And NEW Task At The Same Time
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create 2 new workflows
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    ${task json2}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id2}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json2}
    # Get task IDs
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    ${new task id2}=    Get Task ID From Workflow ID    ${sign off workflow id2}    1
    ${workflow tasks JSON2}=    Get Task From Task ID    ${new task id2}
    Validate Task    ${workflow tasks JSON2}    task_status=NEW
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task 1
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Both Tasks at once, using both ways around
    @{task ids}=    Create List    ${new task id}    ${new task id2}
    Complete Multiple Tasks And Expect Error    403    @{task ids}
    @{task ids}=    Create List    ${new task id2}    ${new task id}
    Complete Multiple Tasks And Expect Error    403    @{task ids}
    # Validate Task Statuses
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    ${workflow tasks JSON2}=    Get Task From Task ID    ${new task id2}
    Validate Task    ${workflow tasks JSON2}    task_status=NEW

Test 6.c - Complete IN_PROGRESS Task and Nonexistent Task At The Same Time
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept aask
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task alongside a noneexistent TaskID (both orderings of ID's)
    @{task ids}=    Create List    ${new task id}    12345678901234567890abcdeffedbca
    Complete Multiple Tasks And Expect Error    404    @{task ids}
    @{task ids}=    Create List    12345678901234567890abcdeffedbca    ${new task id}
    Complete Multiple Tasks And Expect Error    404    @{task ids}
    # Validate Task Status
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS

Test 7 - Call endpoint without valid credentials
    # Obtain due date that is one day from now
    ${new due date}=    Create Due Date Format    NOW + 7 day
    ${todays date}    Create Due Date Format    NOW
    # Create new workflow
    ${task json}=    Create Task JSON    NON_TEST    WF2_REVIEW1    "WorkflowWSUser1"    ${EMPTY}    Example Comment
    ${sign off workflow id}=    Create Workflow Via WS    BY_ENTITY_ID    ${wf_experiment_1}    WF WS Workflow 2    ${new due date}    false
    ...    Normal    ${task json}
    # Get task ID
    ${new task id}=    Get Task ID From Workflow ID    ${sign off workflow id}    1
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=NEW
    # Accept Task
    ${SERVICES USERNAME}    Set Variable    WorkflowWSUser1
    ${SERVICES PASSWORD}    Set Variable    WorkflowWSUser11
    Accept Multiple Tasks    ${new task id}
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
    # Complete Task should fail as we are using an invalid user
    ${SERVICES USERNAME}    Set Variable    aaaaa
    ${SERVICES PASSWORD}    Set Variable    sssss
    Close Multiple Tasks And Expect Error    401    ${new task id}
    # Validate Task Status
    ${SERVICES USERNAME}    Set Variable    Administrator
    ${SERVICES PASSWORD}    Set Variable    Administrator
    ${workflow tasks JSON}=    Get Task From Task ID    ${new task id}
    Validate Task    ${workflow tasks JSON}    task_status=IN_PROGRESS
