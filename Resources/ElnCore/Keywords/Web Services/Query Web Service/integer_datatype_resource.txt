*** Settings ***
Documentation     This resource file is for testing HUB-API-SSP-QUE-QLC.\n\nThis resource file contains queries that have number (integer) filters conditions. \ \n\nThe queries in this resource file will only work with the data that is stored in "....\\EWB Automated Tests\\Libraries\\Web Services\\Query Web Service\\tuple data resource.txt"
Resource          query_resources.txt

*** Keywords ***
Run Integer Datatype Query
    [Arguments]    ${term path}    ${stringColumn}    ${timestampColumn}    ${integerColumn}    ${floatColumn}    ${booleanColumn}
    [Documentation]    This keyword will execute a number queries that have a number (integer) filter condition. \ \n\nThis is testing HUB-API-SSP-QUE-QLC. \n\n\n*Arguments*\n\n- ${term path} = The path to the term to be queried. \n- ${stringColumn} = The name of a string property in the term in ${term path}.\n- ${timestampColumn} = The name of a timestamp property in the term in ${term path}.\n- ${integerColumn} = \ The name of an number (integer) property in the term in ${term path}.\n- ${floatColumn} = The name of an number (float) property in the term in ${term path}.\n- ${booleanColumn} = The name of a boolean property in the term in ${term path}.\n
    # select integer property
    Execute Data Query and Verify Values    SELECT ${integerColumn} FROM ${term path}    8    321    -1    -840    0
    ...    -1    ${null value}
    # = operator
    Execute Data Query and Verify Values    SELECT ${booleanColumn},${timestampColumn} FROM ${term path} AS t WHERE t.${integerColumn} = 321    F,1340392376000
    # != operator
    Execute Data Query and Verify Values    SELECT ${stringColumn},${integerColumn} FROM ${term path} AS t WHERE t.${integerColumn} != -1    Mixed Case String,8    ${null value},321    string with %,-840    ${null value},0
    # > operator
    Execute Data Query and Verify Values    SELECT ${timestampColumn},${booleanColumn} FROM ${term path} AS t WHERE t.${integerColumn} > 0    1340357649000,T    1340392376000,F
    # >= operator
    Execute Data Query and Verify Values    SELECT ${timestampColumn},${booleanColumn} FROM ${term path} AS t WHERE t.${integerColumn} >= 0    1340357649000,T    1340392376000,F    1336604400000,F
    # < operator
    Execute Data Query and Verify Values    SELECT ${floatColumn},${integerColumn} FROM ${term path} AS t WHERE t.${integerColumn} < 0    0.1,-1    3.001,-840    0.1,-1
    # <= operator
    Execute Data Query and Verify Values    SELECT ${floatColumn} FROM ${term path} AS t WHERE t.${integerColumn} <= 0    0.1    3.001    0.1    0
    # OR operator
    Execute Data Query and Verify Values    SELECT ${booleanColumn},${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} = 8 OR t.${integerColumn} = -840    T,Mixed Case String    ${null value},string with %
    # AND operator
    Execute Data Query and Verify Values    SELECT ${booleanColumn},${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} != 8 AND t.${integerColumn} != -840    F,${null value}    T,string with 'quotes'    F,${null value}    ${null value},${null value}
    # ORDER BY operator
    Execute Data Query and Verify Values    SELECT ${floatColumn},${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} >= -99999 ORDER BY ${integerColumn}, ${stringColumn}    3.001,string with %    0.1,string with 'quotes'    0.1,${null value}    0,${null value}    ${null value},Mixed Case String
    ...    -0.001,${null value}
    # MIN() function
    Execute Data Query and Verify Values    SELECT MIN(${integerColumn}) FROM ${term path}    -840
    # MAX() function
    Execute Data Query and Verify Values    SELECT MAX(${integerColumn}) FROM ${term path}    321
    # AVG() function
    Execute Data Query and Verify Values    SELECT AVG(${integerColumn}) FROM ${term path}    -85.5
    # COUNT() and DISTINCT() functions
    Execute Data Query and Verify Values    SELECT COUNT(*), COUNT(${integerColumn}), COUNT(DISTINCT ${integerColumn}) FROM ${term path}    7,6,5
    # IN() function
    Execute Data Query and Verify Values    SELECT ${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} IN (8,-840,0,-1)    Mixed Case String    string with %    string with 'quotes'    null    null

Run Integer Datatype Parameterised Query
    [Arguments]    ${term path}    ${stringColumn}    ${timestampColumn}    ${integerColumn}    ${floatColumn}    ${booleanColumn}
    [Documentation]    This keyword will execute a number queries that have a number (integer) filter condition. \ \n\nAll queries will be executed in parameterised form. \n\nThis is testing HUB-API-SSP-QUE-QLC. \n\n\n*Arguments*\n\n- ${term path} = The path to the term to be queried. \n- ${stringColumn} = The name of a string property in the term in ${term path}.\n- ${timestampColumn} = The name of a timestamp property in the term in ${term path}.\n- ${integerColumn} = \ The name of an number (integer) property in the term in ${term path}.\n- ${floatColumn} = The name of an number (float) property in the term in ${term path}.\n- ${booleanColumn} = The name of a boolean property in the term in ${term path}.\n
    # select integer property
    @{parameterised query 1}=    Create List    SELECT ${integerColumn} FROM ${term path}    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 1}    8    321    -1    -840    0
    ...    -1    ${null value}
    # = operator
    @{parameterised query 2}=    Create List    SELECT ${booleanColumn},${timestampColumn} FROM ${term path} AS t WHERE t.${integerColumn} = :p    java.lang.Integer,p,321
    Execute Parameterised Data Query And Verify Values    ${parameterised query 2}    F,1340392376000
    # != operator
    @{parameterised query 3}=    Create List    SELECT ${stringColumn},${integerColumn} FROM ${term path} AS t WHERE t.${integerColumn} != :p    java.lang.Integer,p,-1
    Execute Parameterised Data Query And Verify Values    ${parameterised query 3}    Mixed Case String,8    ${null value},321    string with %,-840    ${null value},0
    # > operator
    @{parameterised query 4}=    Create List    SELECT \ ${timestampColumn},${booleanColumn} FROM ${term path} AS t WHERE t.${integerColumn} > :p    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 4}    1340357649000,T    1340392376000,F
    # >= operator
    @{parameterised query 5}=    Create List    SELECT ${timestampColumn},${booleanColumn} FROM ${term path} AS t WHERE t.${integerColumn} >= :p    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 5}    1340357649000,T    1340392376000,F    1336604400000,F
    # < operator
    @{parameterised query 6}=    Create List    SELECT ${floatColumn},${integerColumn} FROM ${term path} AS t WHERE t.${integerColumn} < :p    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 6}    0.1,-1    3.001,-840    0.1,-1
    # <= operator
    @{parameterised query 7}=    Create List    SELECT ${floatColumn} FROM ${term path} AS t WHERE t.${integerColumn} <= :p    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 7}    0.1    3.001    0.1    0
    # OR operator
    @{parameterised query 8}=    Create List    SELECT ${booleanColumn},${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} = :p OR t.${integerColumn} = :q    java.lang.Integer,p,8    java.lang.Integer,q,-840
    Execute Parameterised Data Query And Verify Values    ${parameterised query 8}    T,Mixed Case String    ${null value},string with %
    # AND operator
    @{parameterised query 9}=    Create List    SELECT ${booleanColumn},${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} != :p AND t.${integerColumn} != :q    java.lang.Integer,p,8    java.lang.Integer,q,-840
    Execute Parameterised Data Query And Verify Values    ${parameterised query 9}    F,${null value}    T,string with 'quotes'    F,${null value}    ${null value},${null value}
    # ORDER BY operator
    @{parameterised query 10}=    Create List    SELECT ${floatColumn},${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} >= :p ORDER BY ${integerColumn}, ${stringColumn}    java.lang.Integer,p,-99999
    Execute Parameterised Data Query And Verify Values    ${parameterised query 10}    3.001,string with %    0.1,string with 'quotes'    0.1,${null value}    0,${null value}    ${null value},Mixed Case String
    ...    -0.001,${null value}
    # MIN() function
    @{parameterised query 11}=    Create List    SELECT MIN(${integerColumn}) FROM ${term path}    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 11}    -840
    # MAX() function
    @{parameterised query 12}=    Create List    SELECT MAX(${integerColumn}) FROM ${term path}    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 12}    321
    # AVG() function
    @{parameterised query 13}=    Create List    SELECT AVG(${integerColumn}) FROM ${term path}    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 13}    -85.5
    # COUNT() and DISTINCT() functions
    @{parameterised query 14}=    Create List    SELECT COUNT(*), COUNT(${integerColumn}), COUNT(DISTINCT ${integerColumn}) FROM ${term path}    java.lang.Integer,p,0
    Execute Parameterised Data Query And Verify Values    ${parameterised query 14}    7,6,5
    # IN function
    @{parameterised query 15}=    Create List    SELECT ${stringColumn} FROM ${term path} AS t WHERE t.${integerColumn} IN (:p)    java.lang.Integer,p,8,-840,0,-1
    Execute Parameterised Data Query And Verify Values    ${parameterised query 15}    Mixed Case String    string with %    string with 'quotes'    null    null
